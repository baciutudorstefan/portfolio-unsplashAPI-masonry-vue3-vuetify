declare const _default: import("vue").DefineComponent<{
    tag: {
        type: StringConstructor[];
        default: string;
    };
    cols: {
        type: (ObjectConstructor | NumberConstructor | StringConstructor)[];
        default: number;
    };
    gutter: {
        type: (ObjectConstructor | NumberConstructor | StringConstructor)[];
        default: number;
    };
    css: {
        type: BooleanConstructor[];
        default: boolean;
    };
    columnTag: {
        type: StringConstructor[];
        default: string;
    };
    columnClass: {
        type: (ObjectConstructor | StringConstructor | ArrayConstructor)[];
        default: () => never[];
    };
    columnAttr: {
        type: ObjectConstructor[];
        default: () => void;
    };
    resolveSlot: {
        type: BooleanConstructor;
        default: boolean;
    };
}, unknown, {
    wrapperWidth: number;
    displayColumns: number;
    displayGutter: number;
}, {}, {
    render(): void;
    calculateGutterSize(width: number): void;
    calculateColumnCount(width: number): void;
    getColumnsWithChildItems(): [];
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    tag?: unknown;
    cols?: unknown;
    gutter?: unknown;
    css?: unknown;
    columnTag?: unknown;
    columnClass?: unknown;
    columnAttr?: unknown;
    resolveSlot?: unknown;
} & {
    tag: string;
    cols: number;
    gutter: number;
    css: boolean;
    columnTag: string;
    columnClass: never[];
    columnAttr: void;
    resolveSlot: boolean;
} & {}>, {
    tag: string;
    cols: number;
    gutter: number;
    css: boolean;
    columnTag: string;
    columnClass: never[];
    columnAttr: void;
    resolveSlot: boolean;
}>;
export default _default;
