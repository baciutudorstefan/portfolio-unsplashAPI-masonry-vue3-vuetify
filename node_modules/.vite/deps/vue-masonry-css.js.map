{
  "version": 3,
  "sources": ["../../vue-masonry-css/dist/vue-masonry.es2015.js"],
  "sourcesContent": ["/*!\n * vue-masonry-css v1.0.3\n * https://github.com/paulcollett/vue-masonry-css\n * Released under the MIT License.\n */\n\n// the component name `<masonry />`\n// can be overridden with `Vue.use(Masonry, { name: 'the-masonry' });`\nvar componentName = 'masonry';\n\nvar props = {\n  tag: {\n    type: [String],\n    default: 'div'\n  },\n  cols: {\n    type: [Object, Number, String],\n    default: 2\n  },\n  gutter: {\n    type: [Object, Number, String],\n    default: 0\n  },\n  css: {\n    type: [Boolean],\n    default: true\n  },\n  columnTag: {\n    type: [String],\n    default: 'div'\n  },\n  columnClass: {\n    type: [String, Array, Object],\n    default: function () { return []; }\n  },\n  columnAttr: {\n    type: [Object],\n    default: function () { return ({}); }\n  }\n};\n\n// Get the resulting value from  `:col=` prop\n// based on the window width\nvar breakpointValue = function (mixed, windowWidth) {\n  var valueAsNum = parseInt(mixed);\n\n  if(valueAsNum > -1) {\n    return mixed;\n  }else if(typeof mixed !== 'object') {\n    return 0;\n  }\n\n  var matchedBreakpoint = Infinity;\n  var matchedValue = mixed.default || 0;\n\n  for(var k in mixed) {\n    var breakpoint = parseInt(k);\n    var breakpointValRaw = mixed[breakpoint];\n    var breakpointVal = parseInt(breakpointValRaw);\n\n    if(isNaN(breakpoint) || isNaN(breakpointVal)) {\n      continue;\n    }\n\n    var isNewBreakpoint = windowWidth <= breakpoint && breakpoint < matchedBreakpoint;\n\n    if(isNewBreakpoint) {\n      matchedBreakpoint = breakpoint;\n      matchedValue = breakpointValRaw;\n    }\n  }\n\n  return matchedValue;\n};\n\nvar component = {\n  props: props,\n\n  data: function data() {\n    return {\n      displayColumns: 2,\n      displayGutter: 0\n    }\n  },\n\n  mounted: function mounted() {\n    var this$1 = this;\n\n    this.$nextTick(function () {\n      this$1.reCalculate();\n    });\n\n    // Bind resize handler to page\n    if(window) {\n      window.addEventListener('resize', this.reCalculate);\n    }\n  },\n\n  updated: function updated() {\n    var this$1 = this;\n\n    this.$nextTick(function () {\n      this$1.reCalculate();\n    });\n  },\n\n  beforeDestroy: function beforeDestroy() {\n    if(window) {\n      window.removeEventListener('resize', this.reCalculate);\n    }\n  },\n\n  methods: {\n    // Recalculate how many columns to display based on window width\n    // and the value of the passed `:cols=` prop\n    reCalculate: function reCalculate() {\n      var previousWindowWidth = this.windowWidth;\n\n      this.windowWidth = (window ? window.innerWidth : null) || Infinity;\n\n      // Window resize events get triggered on page height\n      // change which when loading the page can result in multiple\n      // needless calculations. We prevent this here.\n      if(previousWindowWidth === this.windowWidth) {\n        return;\n      }\n\n      this._reCalculateColumnCount(this.windowWidth);\n\n      this._reCalculateGutterSize(this.windowWidth);\n    },\n\n    _reCalculateGutterSize: function _reCalculateGutterSize(windowWidth) {\n      this.displayGutter = breakpointValue(this.gutter, windowWidth);\n    },\n\n    _reCalculateColumnCount: function _reCalculateColumnCount(windowWidth) {\n      var newColumns = breakpointValue(this.cols, windowWidth);\n\n      // Make sure we can return a valid value\n      newColumns = Math.max(1, Number(newColumns) || 0);\n\n      this.displayColumns = newColumns;\n    },\n\n    _getChildItemsInColumnsArray: function _getChildItemsInColumnsArray() {\n      var this$1 = this;\n\n      var columns = [];\n      var childItems = this.$slots.default || [];\n\n      // This component does not work with a child <transition-group /> ..yet,\n      // so for now we think it may be helpful to ignore until we can find a way for support\n      if(childItems.length === 1 && childItems[0].componentOptions && childItems[0].componentOptions.tag == 'transition-group') {\n        childItems = childItems[0].componentOptions.children;\n      }\n\n      // Loop through child elements\n      for (var i = 0, visibleItemI = 0; i < childItems.length; i++, visibleItemI++) {\n        // skip Vue elements without tags, which includes\n        // whitespace elements and also plain text\n        if(!childItems[i].tag) {\n          visibleItemI--;\n\n          continue;\n        }\n\n        // Get the column index the child item will end up in\n        var columnIndex = visibleItemI % this$1.displayColumns;\n\n        if(!columns[columnIndex]) {\n          columns[columnIndex] = [];\n        }\n\n        columns[columnIndex].push(childItems[i]);\n      }\n\n      return columns;\n    }\n  },\n\n  render: function render(createElement) {\n    var this$1 = this;\n\n    var columnsContainingChildren = this._getChildItemsInColumnsArray();\n    var isGutterSizeUnitless = parseInt(this.displayGutter) === this.displayGutter * 1;\n    var gutterSizeWithUnit =  isGutterSizeUnitless ? ((this.displayGutter) + \"px\") : this.displayGutter;\n\n    var columnStyle = {\n      boxSizing: 'border-box',\n      backgroundClip: 'padding-box',\n      width: ((100 / this.displayColumns) + \"%\"),\n      border: '0 solid transparent',\n      borderLeftWidth: gutterSizeWithUnit\n    };\n\n    var columns = columnsContainingChildren.map(function (children, index) {\n      /// Create column element and inject the children\n      return createElement(this$1.columnTag, {\n        key: index + '-' + columnsContainingChildren.length,\n        style: this$1.css ? columnStyle : null,\n        class: this$1.columnClass,\n        attrs: this$1.columnAttr\n      }, children); // specify child items here\n    });\n\n    var containerStyle = {\n      display: ['-webkit-box', '-ms-flexbox', 'flex'],\n      marginLeft: (\"-\" + gutterSizeWithUnit)\n    };\n\n    // Return wrapper with columns\n    return createElement(\n      this.tag, // tag name\n      this.css ? { style: containerStyle } : null, // element options\n      columns // column vue elements\n    );\n  }\n};\n\nvar Plugin = function () {};\n\nPlugin.install = function (Vue, options) {\n  if (Plugin.installed) {\n    return;\n  }\n\n  if(options && options.name) {\n    Vue.component(options.name, component);\n  } else {\n    Vue.component(componentName, component);\n  }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(Plugin);\n}\n\nexport default Plugin;\n"],
  "mappings": "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",
  "names": []
}
