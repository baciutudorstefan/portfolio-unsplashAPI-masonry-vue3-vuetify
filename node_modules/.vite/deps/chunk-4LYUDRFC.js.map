{
  "version": 3,
  "sources": ["../../vue-masonry-css/dist/vue-masonry.js"],
  "sourcesContent": ["/*!\n * vue-masonry-css v1.0.3\n * https://github.com/paulcollett/vue-masonry-css\n * Released under the MIT License.\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.VueMasonry = factory());\n}(this, (function () { 'use strict';\n\n// the component name `<masonry />`\n// can be overridden with `Vue.use(Masonry, { name: 'the-masonry' });`\nvar componentName = 'masonry';\n\nvar props = {\n  tag: {\n    type: [String],\n    default: 'div'\n  },\n  cols: {\n    type: [Object, Number, String],\n    default: 2\n  },\n  gutter: {\n    type: [Object, Number, String],\n    default: 0\n  },\n  css: {\n    type: [Boolean],\n    default: true\n  },\n  columnTag: {\n    type: [String],\n    default: 'div'\n  },\n  columnClass: {\n    type: [String, Array, Object],\n    default: function () { return []; }\n  },\n  columnAttr: {\n    type: [Object],\n    default: function () { return ({}); }\n  }\n};\n\n// Get the resulting value from  `:col=` prop\n// based on the window width\nvar breakpointValue = function (mixed, windowWidth) {\n  var valueAsNum = parseInt(mixed);\n\n  if(valueAsNum > -1) {\n    return mixed;\n  }else if(typeof mixed !== 'object') {\n    return 0;\n  }\n\n  var matchedBreakpoint = Infinity;\n  var matchedValue = mixed.default || 0;\n\n  for(var k in mixed) {\n    var breakpoint = parseInt(k);\n    var breakpointValRaw = mixed[breakpoint];\n    var breakpointVal = parseInt(breakpointValRaw);\n\n    if(isNaN(breakpoint) || isNaN(breakpointVal)) {\n      continue;\n    }\n\n    var isNewBreakpoint = windowWidth <= breakpoint && breakpoint < matchedBreakpoint;\n\n    if(isNewBreakpoint) {\n      matchedBreakpoint = breakpoint;\n      matchedValue = breakpointValRaw;\n    }\n  }\n\n  return matchedValue;\n};\n\nvar component = {\n  props: props,\n\n  data: function data() {\n    return {\n      displayColumns: 2,\n      displayGutter: 0\n    }\n  },\n\n  mounted: function mounted() {\n    var this$1 = this;\n\n    this.$nextTick(function () {\n      this$1.reCalculate();\n    });\n\n    // Bind resize handler to page\n    if(window) {\n      window.addEventListener('resize', this.reCalculate);\n    }\n  },\n\n  updated: function updated() {\n    var this$1 = this;\n\n    this.$nextTick(function () {\n      this$1.reCalculate();\n    });\n  },\n\n  beforeDestroy: function beforeDestroy() {\n    if(window) {\n      window.removeEventListener('resize', this.reCalculate);\n    }\n  },\n\n  methods: {\n    // Recalculate how many columns to display based on window width\n    // and the value of the passed `:cols=` prop\n    reCalculate: function reCalculate() {\n      var previousWindowWidth = this.windowWidth;\n\n      this.windowWidth = (window ? window.innerWidth : null) || Infinity;\n\n      // Window resize events get triggered on page height\n      // change which when loading the page can result in multiple\n      // needless calculations. We prevent this here.\n      if(previousWindowWidth === this.windowWidth) {\n        return;\n      }\n\n      this._reCalculateColumnCount(this.windowWidth);\n\n      this._reCalculateGutterSize(this.windowWidth);\n    },\n\n    _reCalculateGutterSize: function _reCalculateGutterSize(windowWidth) {\n      this.displayGutter = breakpointValue(this.gutter, windowWidth);\n    },\n\n    _reCalculateColumnCount: function _reCalculateColumnCount(windowWidth) {\n      var newColumns = breakpointValue(this.cols, windowWidth);\n\n      // Make sure we can return a valid value\n      newColumns = Math.max(1, Number(newColumns) || 0);\n\n      this.displayColumns = newColumns;\n    },\n\n    _getChildItemsInColumnsArray: function _getChildItemsInColumnsArray() {\n      var this$1 = this;\n\n      var columns = [];\n      var childItems = this.$slots.default || [];\n\n      // This component does not work with a child <transition-group /> ..yet,\n      // so for now we think it may be helpful to ignore until we can find a way for support\n      if(childItems.length === 1 && childItems[0].componentOptions && childItems[0].componentOptions.tag == 'transition-group') {\n        childItems = childItems[0].componentOptions.children;\n      }\n\n      // Loop through child elements\n      for (var i = 0, visibleItemI = 0; i < childItems.length; i++, visibleItemI++) {\n        // skip Vue elements without tags, which includes\n        // whitespace elements and also plain text\n        if(!childItems[i].tag) {\n          visibleItemI--;\n\n          continue;\n        }\n\n        // Get the column index the child item will end up in\n        var columnIndex = visibleItemI % this$1.displayColumns;\n\n        if(!columns[columnIndex]) {\n          columns[columnIndex] = [];\n        }\n\n        columns[columnIndex].push(childItems[i]);\n      }\n\n      return columns;\n    }\n  },\n\n  render: function render(createElement) {\n    var this$1 = this;\n\n    var columnsContainingChildren = this._getChildItemsInColumnsArray();\n    var isGutterSizeUnitless = parseInt(this.displayGutter) === this.displayGutter * 1;\n    var gutterSizeWithUnit =  isGutterSizeUnitless ? ((this.displayGutter) + \"px\") : this.displayGutter;\n\n    var columnStyle = {\n      boxSizing: 'border-box',\n      backgroundClip: 'padding-box',\n      width: ((100 / this.displayColumns) + \"%\"),\n      border: '0 solid transparent',\n      borderLeftWidth: gutterSizeWithUnit\n    };\n\n    var columns = columnsContainingChildren.map(function (children, index) {\n      /// Create column element and inject the children\n      return createElement(this$1.columnTag, {\n        key: index + '-' + columnsContainingChildren.length,\n        style: this$1.css ? columnStyle : null,\n        class: this$1.columnClass,\n        attrs: this$1.columnAttr\n      }, children); // specify child items here\n    });\n\n    var containerStyle = {\n      display: ['-webkit-box', '-ms-flexbox', 'flex'],\n      marginLeft: (\"-\" + gutterSizeWithUnit)\n    };\n\n    // Return wrapper with columns\n    return createElement(\n      this.tag, // tag name\n      this.css ? { style: containerStyle } : null, // element options\n      columns // column vue elements\n    );\n  }\n};\n\nvar Plugin = function () {};\n\nPlugin.install = function (Vue, options) {\n  if (Plugin.installed) {\n    return;\n  }\n\n  if(options && options.name) {\n    Vue.component(options.name, component);\n  } else {\n    Vue.component(componentName, component);\n  }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(Plugin);\n}\n\nreturn Plugin;\n\n})));\n"],
  "mappings": ";;;;;AAAA;AAAA;AAMA,KAAC,SAAU,QAAQ,SAAS;AAC3B,aAAO,YAAY,YAAY,OAAO,WAAW,cAAc,OAAO,UAAU,QAAQ,IACxF,OAAO,WAAW,cAAc,OAAO,MAAM,OAAO,OAAO,IAC1D,OAAO,aAAa,QAAQ;AAAA,IAC9B,GAAE,SAAO,WAAY;AAAE;AAIvB,UAAI,gBAAgB;AAEpB,UAAI,QAAQ;AAAA,QACV,KAAK;AAAA,UACH,MAAM,CAAC,MAAM;AAAA,UACb,SAAS;AAAA,QACX;AAAA,QACA,MAAM;AAAA,UACJ,MAAM,CAAC,QAAQ,QAAQ,MAAM;AAAA,UAC7B,SAAS;AAAA,QACX;AAAA,QACA,QAAQ;AAAA,UACN,MAAM,CAAC,QAAQ,QAAQ,MAAM;AAAA,UAC7B,SAAS;AAAA,QACX;AAAA,QACA,KAAK;AAAA,UACH,MAAM,CAAC,OAAO;AAAA,UACd,SAAS;AAAA,QACX;AAAA,QACA,WAAW;AAAA,UACT,MAAM,CAAC,MAAM;AAAA,UACb,SAAS;AAAA,QACX;AAAA,QACA,aAAa;AAAA,UACX,MAAM,CAAC,QAAQ,OAAO,MAAM;AAAA,UAC5B,SAAS,WAAY;AAAE,mBAAO,CAAC;AAAA,UAAG;AAAA,QACpC;AAAA,QACA,YAAY;AAAA,UACV,MAAM,CAAC,MAAM;AAAA,UACb,SAAS,WAAY;AAAE,mBAAQ,CAAC;AAAA,UAAI;AAAA,QACtC;AAAA,MACF;AAIA,UAAI,kBAAkB,SAAU,OAAO,aAAa;AAClD,YAAI,aAAa,SAAS,KAAK;AAE/B,YAAG,aAAa,IAAI;AAClB,iBAAO;AAAA,QACT,WAAS,OAAO,UAAU,UAAU;AAClC,iBAAO;AAAA,QACT;AAEA,YAAI,oBAAoB;AACxB,YAAI,eAAe,MAAM,WAAW;AAEpC,iBAAQ,KAAK,OAAO;AAClB,cAAI,aAAa,SAAS,CAAC;AAC3B,cAAI,mBAAmB,MAAM,UAAU;AACvC,cAAI,gBAAgB,SAAS,gBAAgB;AAE7C,cAAG,MAAM,UAAU,KAAK,MAAM,aAAa,GAAG;AAC5C;AAAA,UACF;AAEA,cAAI,kBAAkB,eAAe,cAAc,aAAa;AAEhE,cAAG,iBAAiB;AAClB,gCAAoB;AACpB,2BAAe;AAAA,UACjB;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,UAAI,YAAY;AAAA,QACd;AAAA,QAEA,MAAM,SAAS,OAAO;AACpB,iBAAO;AAAA,YACL,gBAAgB;AAAA,YAChB,eAAe;AAAA,UACjB;AAAA,QACF;AAAA,QAEA,SAAS,SAAS,UAAU;AAC1B,cAAI,SAAS;AAEb,eAAK,UAAU,WAAY;AACzB,mBAAO,YAAY;AAAA,UACrB,CAAC;AAGD,cAAG,QAAQ;AACT,mBAAO,iBAAiB,UAAU,KAAK,WAAW;AAAA,UACpD;AAAA,QACF;AAAA,QAEA,SAAS,SAAS,UAAU;AAC1B,cAAI,SAAS;AAEb,eAAK,UAAU,WAAY;AACzB,mBAAO,YAAY;AAAA,UACrB,CAAC;AAAA,QACH;AAAA,QAEA,eAAe,SAAS,gBAAgB;AACtC,cAAG,QAAQ;AACT,mBAAO,oBAAoB,UAAU,KAAK,WAAW;AAAA,UACvD;AAAA,QACF;AAAA,QAEA,SAAS;AAAA;AAAA;AAAA,UAGP,aAAa,SAAS,cAAc;AAClC,gBAAI,sBAAsB,KAAK;AAE/B,iBAAK,eAAe,SAAS,OAAO,aAAa,SAAS;AAK1D,gBAAG,wBAAwB,KAAK,aAAa;AAC3C;AAAA,YACF;AAEA,iBAAK,wBAAwB,KAAK,WAAW;AAE7C,iBAAK,uBAAuB,KAAK,WAAW;AAAA,UAC9C;AAAA,UAEA,wBAAwB,SAAS,uBAAuB,aAAa;AACnE,iBAAK,gBAAgB,gBAAgB,KAAK,QAAQ,WAAW;AAAA,UAC/D;AAAA,UAEA,yBAAyB,SAAS,wBAAwB,aAAa;AACrE,gBAAI,aAAa,gBAAgB,KAAK,MAAM,WAAW;AAGvD,yBAAa,KAAK,IAAI,GAAG,OAAO,UAAU,KAAK,CAAC;AAEhD,iBAAK,iBAAiB;AAAA,UACxB;AAAA,UAEA,8BAA8B,SAAS,+BAA+B;AACpE,gBAAI,SAAS;AAEb,gBAAI,UAAU,CAAC;AACf,gBAAI,aAAa,KAAK,OAAO,WAAW,CAAC;AAIzC,gBAAG,WAAW,WAAW,KAAK,WAAW,CAAC,EAAE,oBAAoB,WAAW,CAAC,EAAE,iBAAiB,OAAO,oBAAoB;AACxH,2BAAa,WAAW,CAAC,EAAE,iBAAiB;AAAA,YAC9C;AAGA,qBAAS,IAAI,GAAG,eAAe,GAAG,IAAI,WAAW,QAAQ,KAAK,gBAAgB;AAG5E,kBAAG,CAAC,WAAW,CAAC,EAAE,KAAK;AACrB;AAEA;AAAA,cACF;AAGA,kBAAI,cAAc,eAAe,OAAO;AAExC,kBAAG,CAAC,QAAQ,WAAW,GAAG;AACxB,wBAAQ,WAAW,IAAI,CAAC;AAAA,cAC1B;AAEA,sBAAQ,WAAW,EAAE,KAAK,WAAW,CAAC,CAAC;AAAA,YACzC;AAEA,mBAAO;AAAA,UACT;AAAA,QACF;AAAA,QAEA,QAAQ,SAAS,OAAO,eAAe;AACrC,cAAI,SAAS;AAEb,cAAI,4BAA4B,KAAK,6BAA6B;AAClE,cAAI,uBAAuB,SAAS,KAAK,aAAa,MAAM,KAAK,gBAAgB;AACjF,cAAI,qBAAsB,uBAAyB,KAAK,gBAAiB,OAAQ,KAAK;AAEtF,cAAI,cAAc;AAAA,YAChB,WAAW;AAAA,YACX,gBAAgB;AAAA,YAChB,OAAS,MAAM,KAAK,iBAAkB;AAAA,YACtC,QAAQ;AAAA,YACR,iBAAiB;AAAA,UACnB;AAEA,cAAI,UAAU,0BAA0B,IAAI,SAAU,UAAU,OAAO;AAErE,mBAAO,cAAc,OAAO,WAAW;AAAA,cACrC,KAAK,QAAQ,MAAM,0BAA0B;AAAA,cAC7C,OAAO,OAAO,MAAM,cAAc;AAAA,cAClC,OAAO,OAAO;AAAA,cACd,OAAO,OAAO;AAAA,YAChB,GAAG,QAAQ;AAAA,UACb,CAAC;AAED,cAAI,iBAAiB;AAAA,YACnB,SAAS,CAAC,eAAe,eAAe,MAAM;AAAA,YAC9C,YAAa,MAAM;AAAA,UACrB;AAGA,iBAAO;AAAA,YACL,KAAK;AAAA;AAAA,YACL,KAAK,MAAM,EAAE,OAAO,eAAe,IAAI;AAAA;AAAA,YACvC;AAAA;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,UAAI,SAAS,WAAY;AAAA,MAAC;AAE1B,aAAO,UAAU,SAAU,KAAK,SAAS;AACvC,YAAI,OAAO,WAAW;AACpB;AAAA,QACF;AAEA,YAAG,WAAW,QAAQ,MAAM;AAC1B,cAAI,UAAU,QAAQ,MAAM,SAAS;AAAA,QACvC,OAAO;AACL,cAAI,UAAU,eAAe,SAAS;AAAA,QACxC;AAAA,MACF;AAEA,UAAI,OAAO,WAAW,eAAe,OAAO,KAAK;AAC/C,eAAO,IAAI,IAAI,MAAM;AAAA,MACvB;AAEA,aAAO;AAAA,IAEP,CAAE;AAAA;AAAA;",
  "names": []
}
